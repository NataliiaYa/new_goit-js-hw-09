{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBAKG,SAAhCG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEqDC,YAAhF,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAGpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAGtBA,E,IAdLP,EAAKgB,iBAAiB,UAmBN,SAAMC,GACpBA,EAAIC,iBAOJ,IAJA,IAAIC,EAAaC,OAAOjB,EAAMkB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OACxBE,EAAcH,OAAOhB,EAAKiB,OAErBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCnB,EAAcmB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALX,MACjBjB,EAAA8B,OAAOC,QAAQ,qBAAoCC,OAAfxB,EAAS,QAAYwB,OAANH,EAAM,MAAK,CAC5DI,MAAO,QACPC,SAAU,Q,IAGhBb,GAAcG,EAEhBtB,EAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\n\nform.addEventListener('submit', onSubmitForm);\n//створюємо нову обіцянку і відразу викликаємо її\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n// плануємо час запуску функції через певний час (delay - час в мілісекундах, через який функція буде викликана один раз) \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n    // Fulfill\n      } else {\n        reject({ position, delay });\n    // Reject\n  }\n  }, delay)\n\n    })\n}\n// створюємо функцію submit\nfunction onSubmitForm(evt) {\n  evt.preventDefault(); //забороняємо перезавантажувати сторінку\n\n  //присвоюємо числові значення\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(step.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          width: '400px',\n          fontSize: '20px',\n        },);\n      });\n    delayValue += stepValue;\n  }\n  form.reset();\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","param","delay2","Notify","success","concat","width","fontSize","reset"],"version":3,"file":"03-promises.02f2bda3.js.map"}